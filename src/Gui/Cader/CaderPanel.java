/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

/**
 *
 * @author Dirk
 */
public class RaidPanel extends javax.swing.JPanel {

    /**
     * Creates new form RaidPanel
     */
    public RaidPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tankHideCB = new javax.swing.JCheckBox();
        ddHideCB = new javax.swing.JCheckBox();
        healHideCB = new javax.swing.JCheckBox();
        supHideCB = new javax.swing.JCheckBox();
        roleFilterCB = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tankHideCB.setSelected(true);
        tankHideCB.setText("Tank's");

        ddHideCB.setSelected(true);
        ddHideCB.setText("DD'S");

        healHideCB.setSelected(true);
        healHideCB.setText("Heiler");

        supHideCB.setSelected(true);
        supHideCB.setText("Supporter");

        roleFilterCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tank", "keine Tanks", "Heiler& Support", "Alle" }));
        roleFilterCB.setSelectedIndex(3);
        roleFilterCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                roleFilterCBItemStateChanged(evt);
            }
        });
        roleFilterCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleFilterCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(tankHideCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ddHideCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(healHideCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(supHideCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(roleFilterCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tankHideCB)
                .addComponent(ddHideCB)
                .addComponent(healHideCB)
                .addComponent(supHideCB)
                .addComponent(roleFilterCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Pos", "Name", "Klasse", "Main Rolle", "", "Moved"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void roleFilterCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleFilterCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleFilterCBActionPerformed

    private void roleFilterCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_roleFilterCBItemStateChanged
        tankHideCB.setSelected(false);
        ddHideCB.setSelected(false);
        healHideCB.setSelected(false);
        supHideCB.setSelected(false);
        switch (roleFilterCB.getSelectedIndex()){
            case 0 ://tanks
                    tankHideCB.setSelected(true);
                break;
            default:// alle
                    tankHideCB.setSelected(true);
            case 1 ://-tanks
                    ddHideCB.setSelected(true);
            case 2 ://sup & healer
                    healHideCB.setSelected(true);
                    supHideCB.setSelected(true);
                break;
        }
    }//GEN-LAST:event_roleFilterCBItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ddHideCB;
    private javax.swing.JCheckBox healHideCB;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox roleFilterCB;
    private javax.swing.JCheckBox supHideCB;
    private javax.swing.JCheckBox tankHideCB;
    // End of variables declaration//GEN-END:variables
}
